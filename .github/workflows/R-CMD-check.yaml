on:
  push:
    branches:
      - main
      - devl
  pull_request:
    branches:
      - main
      - devl

name: R-CMD-check

jobs:
  check_skip_flags:
    name: Check skip flags
    runs-on: ubuntu-latest
    outputs:
      head-commit-message: ${{ steps.get_head_commit_message.outputs.headCommitMsg }}
    steps:
      - name: Get repo at last commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.event.after}}
      - name: Save commit message
        id: get_head_commit_message
        run: |
          MSG=$(git log --format=%B -n 1 ${{github.event.after}})
          echo "${MSG}" >> "$GITHUB_OUTPUT"
      - name: Echo commit message
        run: echo "Commit SHA: ${{github.event.after}}, commit message: ${{jobs.check_skip_flags.head-commit-message}}"


  R-CMD-check:
    env:
      _SP_EVOLUTION_STATUS_: 2
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      R_REPRODUCIBLE_RUN_ALL_EXAMPLES: true
      R_REPRODUCIBLE_RUN_ALL_TESTS: true
      COMMITMESSAGE: ${{ needs.check_skip_flags.head-commit-message }}
      
    if: "!contains(needs.check_skip_flags.head-commit-message, '[skip-ci]')"
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          # - {os: windows-latest, r: 'devel'}
          - {os: windows-latest, r: 'release'}
          # - {os: windows-latest, r: 'oldrel'}
          # - {os: windows-latest, r: '4.1'}
          # - {os: ubuntu-20.04,   r: 'devel'}
          - {os: ubuntu-20.04,   r: 'release'}
          # - {os: ubuntu-20.04,   r: 'oldrel'}
          # - {os: ubuntu-20.04,   r: '4.1'}

    steps:
      - name: Install X11 dependencies on MacOS
        if: runner.os == 'macOS'
        run: |
          brew install --cask xquartz
          
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2
      

      - uses: r-lib/actions/setup-r@v2
        with:
          Ncpus: 2
          r-version: ${{ matrix.config.r }}
          use-public-rspm: false

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::plotly
            any::rcmdcheck
            any::Rcpp
            any::remotes
            any::stinepack
            any::withr

      - name: Package checks
        if: "contains(needs.check_skip_flags.head-commit-message, '[skip-tests]')"
        uses: r-lib/actions/check-r-package@v2    
        with:
          args: 'c("--no-manual", "--as-cran", "--no-tests", "--no-examples")'
          
      - name: Package checks
        if: "!contains(needs.check_skip_flags.head-commit-message, '[skip-tests]')"
        uses: r-lib/actions/check-r-package@v2    
        with:
          args: 'c("--no-manual", "--as-cran", "--run-dontrun", "--run-donttest")'

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
