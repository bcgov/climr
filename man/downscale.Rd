% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/downscale.R
\name{downscale}
\alias{downscale}
\title{Change-factor downscaling of observed and simulated climate data}
\usage{
downscale(
  xyz,
  normal,
  gcm = NULL,
  historic = NULL,
  gcm_ts = NULL,
  gcm_hist = NULL,
  historic_ts = NULL,
  return_normal = FALSE,
  vars = sort(sprintf(c("PPT\%02d", "Tmax\%02d", "Tmin\%02d"), sort(rep(1:12, 3)))),
  ppt_lr = FALSE,
  nthread = 1L,
  out_spatial = FALSE,
  plot = NULL
)
}
\arguments{
\item{xyz}{a \code{data.frame} with the following columns "long", "lat", "elev",
and a unique "id". Any extra columns will be ignored and not output.}

\item{normal}{\code{SpatRaster}. Outputs from \code{\link[=normal_input]{normal_input()}}. The high-resolution
climate maps for use as the downscaling baseline.}

\item{gcm}{\code{list} of \code{SpatRasters}. Outputs from \code{\link[=gcm_input]{gcm_input()}}. Global
climate model data for 20-year normal periods to be downscaled. Default to \code{NULL}.}

\item{historic}{\code{list} of \code{SpatRasters}. Outputs from \code{\link[=historic_input]{historic_input()}}.
Observed climate data for 20-year normal periods to be downscaled. Default to \code{NULL}.}

\item{gcm_ts}{\code{list} of \code{SpatRasters}. Outputs from \code{\link[=gcm_ts_input]{gcm_ts_input()}}.
Global climate model time series for ssp-rcp scenarios to be downscaled. Default to \code{NULL}.}

\item{gcm_hist}{\code{list} of \code{SpatRasters}. Outputs from \code{\link[=gcm_hist_input]{gcm_hist_input()}}.
Global climate model time series for historical scenario to be downscaled. Default to \code{NULL}.}

\item{historic_ts}{\code{list} of \code{SpatRasters}. Outputs from \code{\link[=historic_input_ts]{historic_input_ts()}}.
Observed climate time series to be downscaled. Default to \code{NULL}.}

\item{return_normal}{logical. Return downscaled climate values for the reference normal period (1961-1990)? Default \code{TRUE}.}

\item{vars}{character. A vector of climate variables to compute.
Options are \code{\link[=list_variables]{list_variables()}}.
Definitions can be found by calling \code{View(variables)} and queried by loading the 'variables' object into the R environment with \code{data(variables)}.
Defaults to monthly PPT, Tmax, Tmin.}

\item{ppt_lr}{logical. Apply elevation adjustment to precipitation. Default to FALSE.}

\item{nthread}{integer. Number of parallel threads to use to do computations. Default to 1L.}

\item{out_spatial}{logical. Should a SpatVector be returned instead of a
\code{data.frame}.}

\item{plot}{character. If \code{out_spatial} is TRUE, the name of a variable to plot.
If the variable exists in \code{normal}, then its normal values will also be plotted.
Otherwise, normal January total precipitation (PPT01) values will be plotted.
Defaults to no plotting (NULL).}
}
\value{
A \code{data.table} or SpatVector with downscaled climate variables. If \code{gcm} is NULL,
this is just the downscaled \code{normal} at point locations. If \code{gcm} is provided,
this returns a downscaled dataset for each point location, general circulation
model (GCM), shared socioeconomic pathway (SSP), run and period.
}
\description{
\code{downscale()} is the engine for \code{\link[=climr_downscale]{climr_downscale()}}.
It takes user-supplied high- and low-resolution rasters as input and downscales to user-specified point locations.
While less user-friendly than \code{\link[=climr_downscale]{climr_downscale()}}, \code{downscale()} is more flexible in that users can supply their own raster inputs. For example, a user could supply their own high-resolution climate map, instead of what is available in climr, as the input to \code{normal}.
}
\details{
We recommend \code{\link[=climr_downscale]{climr_downscale()}} for most purposes.
}
\examples{
dbCon <- data_connect()
on.exit(try(pool::poolClose(dbCon)))
xyz <- data.frame(lon = runif(10, -140, -106), lat = runif(10, 37, 61), elev = runif(10), id = 1:10)

## get bounding box based on input points
thebb <- get_bb(xyz)
normal <- normal_input(dbCon = dbCon, bbox = thebb, cache = TRUE)

## pick one GCM, one SSP and one period from the list of available options
gcm <- gcm_input(dbCon, thebb, gcm = list_gcm()[3], list_ssp()[1], list_gcm_period()[2])

## notice coarseness of the data
terra::plot(gcm[[1]])

downscale(xyz, normal, gcm)
historic <- historic_input(dbCon, thebb)
terra::plot(historic[[1]])

downscale(xyz, normal, gcm = NULL, historic = historic, ppt_lr = FALSE)
}
\seealso{
\code{\link[=gcm_input]{gcm_input()}}, \code{\link[=historic_input]{historic_input()}}, \code{\link[=list_variables]{list_variables()}}
}
